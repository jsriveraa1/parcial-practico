{
	"info": {
		"_postman_id": "6be93c11-b100-4de5-8556-2a815adc4daa",
		"name": "Parcial-APIS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24016639"
	},
	"item": [
		{
			"name": "Producto",
			"item": [
				{
					"name": "Crear producto valido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.collectionVariables.set(\"productoId\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Maiz\",\n    \"precio\": 1000,\n    \"tipo\": \"Perecedero\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear producto invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"   pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Maiz\",\n    \"precio\": 1000,\n    \"tipo\": \"Prubea\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener todos los productos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of products > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un producto por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/products/{{productoId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"products",
								"{{productoId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar un producto",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Maiz puro\",\n    \"precio\": 1000,\n    \"tipo\": \"Perecedero\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/products/{{productoId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"products",
								"{{productoId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar producto por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/products/{{productoId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"products",
								"{{productoId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un producto por un ID que no existe.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El producto con el id buscado no se encontró\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/products/{{productoId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"products",
								"{{productoId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar un producto con ID no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El producto con el id buscado no se encontró\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{host}}/products/{{productoId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"products",
								"{{productoId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar producto por ID no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El producto con el id buscado no se encontró\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/products/{{productoId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"products",
								"{{productoId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tienda",
			"item": [
				{
					"name": "Crear tienda valida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.collectionVariables.set(\"tiendaId\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Super tiendas SA\",\n    \"ciudad\": \"CCT\",\n    \"direccion\": \"Diagonal Santander\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/stores",
							"host": [
								"{{host}}"
							],
							"path": [
								"stores"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear tienda invalida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 412\", function () {",
									"   pm.response.to.have.status(412);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Super tiendas SA\",\n    \"ciudad\": \"CUCUTA\",\n    \"direccion\": \"Diagonal Santander\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/stores",
							"host": [
								"{{host}}"
							],
							"path": [
								"stores"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener todos los tienda",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of products > ' + 0, function () {",
									"   var data = pm.response.json()",
									"   pm.expect(data.length).to.greaterThan(0)",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/stores",
							"host": [
								"{{host}}"
							],
							"path": [
								"stores"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener un tienda por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/stores/{{tiendaId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"stores",
								"{{tiendaId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar un tienda",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Supermercado El mejor SA\",\n    \"ciudad\": \"CCT\",\n    \"direccion\": \"Diagonal Santander\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/stores/{{tiendaId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"stores",
								"{{tiendaId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar tienda por ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/stores/{{tiendaId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"stores",
								"{{tiendaId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener una tienda con ID no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"La tienda con el id buscado no se encontró\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/stores/{{tiendaId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"stores",
								"{{tiendaId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar un tienda con ID no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"La tienda con el id buscado no se encontró\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Super tiendas SA\",\n    \"ciudad\": \"CCT\",\n    \"direccion\": \"Diagonal Santander\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/stores/{{tiendaId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"stores",
								"{{tiendaId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar tienda por ID no existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"La tienda con el id buscado no se encontró\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/stores/{{tiendaId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"stores",
								"{{tiendaId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Producto-Tienda",
			"item": [
				{
					"name": "Crear producto (Asociacion)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.collectionVariables.set(\"productoId\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Maiz\",\n    \"precio\": 1000,\n    \"tipo\": \"Perecedero\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/products",
							"host": [
								"{{host}}"
							],
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Crear tienda (Asociacion)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()",
									"pm.collectionVariables.set(\"tiendaId\", data.id);",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nombre\": \"Super tiendas SA\",\n    \"ciudad\": \"CCT\",\n    \"direccion\": \"Diagonal Santander\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/stores",
							"host": [
								"{{host}}"
							],
							"path": [
								"stores"
							]
						}
					},
					"response": []
				},
				{
					"name": "Agregar una nueva tienda a las oferentes de un producto.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/products/{{productoId}}/stores/{{tiendaId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"products",
								"{{productoId}}",
								"stores",
								"{{tiendaId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Asociar una tienda que no existe a las oferentes de un producto.",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/products/{{productoId}}/stores/{{tiendaIdNoExistente}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"products",
								"{{productoId}}",
								"stores",
								"{{tiendaIdNoExistente}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener todas las tiendas que ofrecen un producto.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/products/{{productoId}}/stores",
							"host": [
								"{{host}}"
							],
							"path": [
								"products",
								"{{productoId}}",
								"stores"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener una tienda que ofrece un producto.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/products/{{productoId}}/stores/{{tiendaId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"products",
								"{{productoId}}",
								"stores",
								"{{tiendaId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Obtener una tienda que ofrece un producto que no existe.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El producto con el id no se encontró\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/products/{{productoIdNoExistente}}/stores/{{tiendaId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"products",
								"{{productoIdNoExistente}}",
								"stores",
								"{{tiendaId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar las tiendas que ofrecen un producto.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"   pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"{{tiendaId}}\",\n        \"nombre\": \"Super tiendas SA\",\n        \"ciudad\": \"CCT\",\n        \"direccion\": \"Diagonal Santander\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/products/{{productoId}}/stores",
							"host": [
								"{{host}}"
							],
							"path": [
								"products",
								"{{productoId}}",
								"stores"
							]
						}
					},
					"response": []
				},
				{
					"name": "Actualizar las tiendas que ofrecen un producto, con una tienda inexistente.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"La tienda con el id no ha sido encontrada\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"id\": \"{{tiendaIdNoExistente}}\",\n        \"nombre\": \"Super tiendas SA\",\n        \"ciudad\": \"CCT\",\n        \"direccion\": \"Diagonal Santander\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/products/{{productoId}}/stores",
							"host": [
								"{{host}}"
							],
							"path": [
								"products",
								"{{productoId}}",
								"stores"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar una tienda que ofrece un producto.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"   pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/products/{{productoId}}/stores/{{tiendaId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"products",
								"{{productoId}}",
								"stores",
								"{{tiendaId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Eliminar una tienda que no ofrece un producto.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"   pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Get expected error message\", function () {",
									"   var data = pm.response.json();",
									"   pm.expect(data.message).to.eql(\"El producto con el id no se encontró\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/products/{{productoIdNoExistente}}/stores/{{tiendaId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"products",
								"{{productoIdNoExistente}}",
								"stores",
								"{{tiendaId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		},
		{
			"key": "productoId",
			"value": "",
			"type": "string"
		},
		{
			"key": "tiendaId",
			"value": "",
			"type": "string"
		},
		{
			"key": "productoIdNoExistente",
			"value": "",
			"type": "string"
		},
		{
			"key": "tiendaIdNoExistente",
			"value": "",
			"type": "string"
		}
	]
}